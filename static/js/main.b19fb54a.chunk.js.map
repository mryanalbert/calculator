{"version":3,"sources":["components/Button.js","App.js","serviceWorker.js","index.js"],"names":["Button","val","_this","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","concat","isOperator","props","value","id","onClick","handleClick","React","Component","App","Object","C_Users_Acer_Desktop_react_projects_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_Acer_Desktop_react_projects_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Acer_Desktop_react_projects_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","input","decimal","operator","handleClear","bind","C_Users_Acer_Desktop_react_projects_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","addToInput","evaluate","setState","length","toString","indexOf","eval","react__WEBPACK_IMPORTED_MODULE_6___default","Input","_components_Button__WEBPACK_IMPORTED_MODULE_7__","ClearButton","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b19fb54a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends React.Component {\r\n    isOperator(val) {\r\n        return val === \"+\" || val === \"-\" || val === \"*\" || val === \"/\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className={`button ${this.isOperator(this.props.value) ? \"operator\" : \"\"}`}\r\n                id={this.props.id}\r\n                onClick={() => this.props.handleClick(this.props.value)}\r\n            >\r\n                {this.props.value}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport Button from './components/Button'\nimport './App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: \"0\",\n            decimal: true,\n            operator: true\n        }\n\n    this.handleClear = this.handleClear.bind(this);\n    this.addToInput = this.addToInput.bind(this);\n    this.evaluate = this.evaluate.bind(this);\n    }\n\n    handleClear() {\n        this.setState({ input: \"0\", decimal: true, operator: true })\n    }\n\n    addToInput(val) {\n        if (this.state.input == \"0\") {\n            if (val == \"+\" || val == \"-\" || val == \"*\" || val == \"/\") {\n                this.setState({ input: this.state.input + val, decimal: false, operator: false });\n            }\n            else if (val == \".\") {\n                this.setState({ input: this.state.input + val, decimal: false, operator: false });\n            }\n            else {\n                this.setState({ input: val, decimal: true, operator: true });\n            }\n        }\n\n        else {\n            if (val == \"+\" || val == \"-\" || val == \"*\" || val == \"/\") {\n                if (this.state.operator == true) {\n                    this.setState({ input: this.state.input + val, decimal: true, operator: false });\n                }\n            }\n            else if(val == \".\") {\n                if (this.state.decimal == true) {\n                    if (this.state.input[this.state.input.length - 1] == \"+\" || this.state.input[this.state.input.length - 1] == \"-\" || this.state.input[this.state.input.length - 1] == \"*\" || this.state.input[this.state.input.length - 1] == \"/\") {\n                        this.setState({ input: this.state.input + \"0\" + val, decimal: false, operator: false });\n                    }\n                    else {\n                        this.setState({ input: this.state.input + val, decimal: false, operator: false});\n                    }\n                }\n                else {\n                    if (this.state.input.toString().indexOf(\".\") == -1) { \n                        this.setState({ input:this.state.input + val });\n                    }\n                }\n            }\n            else {\n                this.setState({ input: this.state.input + val, decimal: this.state.decimal, operator: true });\n            }\n        }\n    }\n\n    evaluate() {\n        this.setState({ input: eval(this.state.input), decimal: false, operator: true });\n        \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"calc-wrapper\">\n                <Input id=\"display\" value={this.state.input} />\n                <div className=\"row\">\n                    <Button id=\"seven\" value=\"7\" handleClick={this.addToInput}/>\n                    <Button id=\"eight\" value=\"8\" handleClick={this.addToInput}/>\n                    <Button id=\"nine\" value=\"9\" handleClick={this.addToInput}/>\n                    <Button id=\"divide\" value=\"/\" handleClick={this.addToInput}/>\n                </div>\n                <div className=\"row\">\n                    <Button id=\"four\" value=\"4\" handleClick={this.addToInput}/>\n                    <Button id=\"five\" value=\"5\" handleClick={this.addToInput}/>\n                    <Button id=\"six\" value=\"6\" handleClick={this.addToInput}/>\n                    <Button id=\"multiply\" value=\"*\" handleClick={this.addToInput}/>\n                </div>\n                <div className=\"row\">\n                    <Button id=\"one\" value=\"1\" handleClick={this.addToInput}/>\n                    <Button id=\"two\" value=\"2\" handleClick={this.addToInput}/>\n                    <Button id=\"three\" value=\"3\" handleClick={this.addToInput}/>\n                    <Button id=\"add\" value=\"+\" handleClick={this.addToInput}/>\n                </div>\n                <div className=\"row\">\n                    <Button id=\"decimal\" value=\".\" handleClick={this.addToInput}/>\n                    <Button id=\"zero\" value=\"0\" handleClick={this.addToInput}/>\n                    <Button id=\"equals\" value=\"=\" handleClick={this.evaluate}/>\n                    <Button id=\"subtract\" value=\"-\" handleClick={this.addToInput}/>       \n                </div>\n                <div className=\"row\">\n                    <ClearButton id=\"clear\" value=\"C\" handleClick={this.handleClear} />\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div id={this.props.id} className=\"input\">\n                {this.props.value}\n            </div>\n        );\n    }\n}\n\nclass ClearButton extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div className=\"clear-btn\" id={this.props.id} onClick={this.props.handleClick}>\n                {this.props.value}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}